@startuml
class Element {
  top: number
  left: number
  width: number
  height: number
  color: string
}

class Block {
  isCollidedWith(block: Block): boolean
}

class Bird {
  speedVertical: number
  speedHorizontal: number
  --
  flap(): void
  drop(gravity: number): void
  fly(cb: (speed: number) => void): void
}

class Map {
  - pipes: Pipe[]
  - gap: number
  gravity: number
  distance: number
  --
  isCollidedAnyPipes(block: Block): boolean
  moveOn(distance: number): void
}

class Pipe {
}

class BootScreen {
  - onStart: function
  --
  boot(): void
  showStartButton(): void
  showRestartButton(): void
  showScore(score: number): void
}

class Game {
  - bird: Bird
  - map: Map
  - bootScreen: BootScreen
  - score: number
  - status: string
  --
  - render(): void
  start(): void
  continue(): void
  gameover(): void
}

Element <|-- Block
Element <|-- Map
Element <|-- BootScreen
Block <|-- Bird
Block <|-- Pipe

Pipe *-- Map
Bird .. Map

Bird *-- Game
Map *-- Game
BootScreen *-- Game
@enduml

